(namespace silux)

(macro $router (...routes)
  (var rs (list))
  (bulk-map routes (#(path view) 
                     (assign rs (.concat rs (list path view)))))
  `(silux-router (hash ...@rs)))

(macro $route-link (props ...children)
  (var ps (list)
       on (list)
       ev (generate-symbol 'event)
       hr null
       sn null
       em null)
  (bulk-map props.contents
            (#(prop value)
              (if (or (= prop.token 'href)
                      (= prop.token 'url))
                  (do (assign hr value)
                      (.push ps 'href value))
                  (= prop.token 'class)
                  (.push ps 'class-name value)
                  (= prop.token 'emitter)
                  (assign em value)
                  (= prop.token 'signal)
                  ; handle signal somehow...
                  (assign sn value)
                  (return)))) ;skip
  (when (exists? em)
    (.push on 'click `(lambda (@ev) 
                        (.prevent-default @ev)
                        @(if (exists? sn)
                             `(@em (go-route @hr (@sn @ev)))
                             `(@em (go-route @hr))))))
  (if (> (length on) 0)
      `(h "a" (hash :props (hash ...@ps) :on (hash ...@on)) (list ...@children))
      `(h "a" (hash :props (hash ...@ps)) (list ...@children))))
                  
  
